i * i = (-1.0,0.0)
pow(i, 2) = (-1.0,0.0)
exp(i * pi) = (-1.0,0.0)
(1+2i)*(1-2i) = (5.0,0.0)
Square root of -4 is (0.0,2.0)
Square root of (-4,-0), the other side of the cut, is (0.0,-2.0)

sqrt(-1) = (0.0,1.0)
Square root of (-1,-0), the other side of the cut, is (0.0,-1.0)



Now, using my own xyi() function to print complex numbers:

i * i = -1 + i 0
pow(i, 2) = -1 + i 0
exp(i * pi) = -1 + i 0
(1+2i)*(1-2i) = 5 + i 0
Square root of -4 is 0 + i 2
Square root of (-4,-0), the other side of the cut, is 0 - i 2

sqrt(-1) = 0 + i 1
Square root of (-1,-0), the other side of the cut, is 0 - i 1


1i = (0.0,1.0) = 0 + i 1
1i * 1i = (-1.0,0.0) = pow(1i, 2) = (-1.0,0.0) = -1 + i 0
pow(i1, 3) = (-0.0,-1.0) = 0 - i 1


Using J: typedef std::complex<double> dcomplex
	#define J dcomplex(0.0,1.0)



J = (0.0,1.0) = 0 + i 1
J * J = (-1.0,0.0) = pow(J, 2) = (-1.0,0.0) = -1 + i 0
pow(J, 3) = (-0.0,-1.0) = 0 - i 1
(1+2*J)*(1-2*J) = 5 + i 0
